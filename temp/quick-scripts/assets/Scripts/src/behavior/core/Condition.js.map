{"version":3,"sources":["Condition.ts"],"names":[],"mappings":";;;;;AAAA,uCAAkC;AAIlC;;;;;;IAMI;AAEJ;IAAuC,6BAAQ;IAE7C;;;;;;;OAOG;IACH,mBAAY,IAAiB;QAA7B,iBAGC;QAFC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC,YAAY;QACzC,QAAA,kBAAM,IAAI,CAAC,SAAC;;IACd,CAAC;IAEH,gBAAC;AAAD,CAfA,AAeC,CAfsC,kBAAQ,GAe9C;;AAAA,CAAC","file":"","sourceRoot":"../../../../../../../assets/Scripts/src/behavior/core","sourcesContent":["import BaseNode from './BaseNode';\nimport {CONDITION} from '../constants';\nimport { BaseNodeData } from '../interf';\n\n/**\n * Condition is the base class for all condition nodes. Thus, if you want to\n * create new custom condition nodes, you need to inherit from this class.\n *\n * @class Condition\n * @extends BaseNode\n **/\n\nexport default class Condition extends BaseNode {\n\n  /**\n   * Creates an instance of Condition.\n   * @param {Object} options \n   * @param {Object} options.name Node name. Default to `Condition`.\n   * @param {String} options.title\n   * @param {Object} options.properties\n   * @memberof Condition\n   */\n  constructor(data:BaseNodeData) {\n    data.category = 'condition'; //CONDITION;\n    super(data);\n  }\n\n};\n"]}