{"version":3,"sources":["Inverter.ts"],"names":[],"mappings":";;;;;AAAA,+CAA0C;AAC1C,0CAAqD;AAGrD;;;;;;;IAOI;AAEJ;IAAsC,4BAAS;IAE7C;;;;;OAKG;IACH,kBAAY,IAAkB;QAA9B,iBAGC;QAFC,IAAI,CAAC,IAAI,GAAE,UAAU,CAAC;QACtB,QAAA,kBAAM,IAAI,CAAC,SAAC;;IACd,CAAC;IAED;;;;;QAKI;IACJ,uBAAI,GAAJ,UAAK,IAAI;QACP,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO,iBAAK,CAAC;SACd;QAED,IAAI,MAAM,GAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAE3C,IAAI,MAAM,IAAI,mBAAO,EAAE;YACrB,MAAM,GAAG,mBAAO,CAAC;SAClB;aAAM,IAAI,MAAM,IAAI,mBAAO,EAAE;YAC5B,MAAM,GAAG,mBAAO,CAAC;SAClB;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IACH,eAAC;AAAD,CAlCA,AAkCC,CAlCqC,mBAAS,GAkC9C;;AAAA,CAAC","file":"","sourceRoot":"../../../../../../../assets/Scripts/src/behavior/decorators","sourcesContent":["import Decorator from '../core/Decorator';\nimport {FAILURE, SUCCESS, ERROR} from '../constants';\nimport { BaseNodeData } from '../interf';\n\n/**\n * The Inverter decorator inverts the result of the child, returning `SUCCESS`\n * for `FAILURE` and `FAILURE` for `SUCCESS`.\n *\n * @module b3\n * @class Inverter\n * @extends Decorator\n **/\n\nexport default class Inverter extends Decorator {\n\n  /**\n   * Creates an instance of Inverter.\n   * @param {Object} params\n   * @param {BaseNode} params.child The child node.\n   * @memberof Inverter\n   */\n  constructor(data?:BaseNodeData){\n    data.name= 'Inverter';\n    super(data);\n  }\n\n  /**\n   * Tick method.\n   * @method tick\n   * @param {Tick} tick A tick instance.\n   * @return {Constant} A state constant.\n   **/\n  tick(tick) {\n    if (!this.child) {\n      return ERROR;\n    }\n\n    var status:any = this.child._execute(tick);\n\n    if (status == SUCCESS) {\n      status = FAILURE;\n    } else if (status == FAILURE) {\n      status = SUCCESS;\n    }\n\n    return status;\n  }\n};\n"]}