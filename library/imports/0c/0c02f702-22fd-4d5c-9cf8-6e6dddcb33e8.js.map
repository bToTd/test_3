{"version":3,"sources":["../../../../../../../assets/Scripts/src/behavior/actions/assets/Scripts/src/behavior/actions/Error.ts"],"names":[],"mappings":";;;;;AAAA,0CAAmC;AACnC,yCAAoC;AAEpC;;;;;;IAMI;AACJ;IAAmC,yBAAM;IAEvC;;;OAGG;IACH;eACE,kBAAM,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;IACxB,CAAC;IAED;;;;;QAKI;IACJ,oBAAI,GAAJ,UAAK,IAAI;QACP,OAAO,iBAAK,CAAC;IACf,CAAC;IACH,YAAC;AAAD,CAnBA,AAmBC,CAnBkC,gBAAM,GAmBxC;;AAAA,CAAC","file":"","sourceRoot":"../../../../../../../assets/Scripts/src/behavior/actions","sourcesContent":["import {ERROR} from '../constants';\nimport Action from '../core/Action';\n\n/**\n * This action node returns `ERROR` always.\n *\n * @module b3\n * @class Error\n * @extends Action\n **/\nexport default class Error extends Action {\n\n  /**\n   * Creates an instance of Error.\n   * @memberof Error\n   */\n  constructor(){\n    super({name: 'Error'});\n  }\n\n  /**\n   * Tick method.\n   * @method tick\n   * @param {b3.Tick} tick A tick instance.\n   * @return {Constant} Always return `ERROR`.\n   **/\n  tick(tick) {\n    return ERROR;\n  }\n};\n"]}